.TH "REDIST/TESTING/pctrmrdrv.c" 3 "Sat Nov 16 2019" "Version 2.1" "ScaLAPACK 2.1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
REDIST/TESTING/pctrmrdrv.c
.SH SYNOPSIS
.br
.PP
\fC#include 'redist\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <varargs\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBcomplex\fP"
.br
.ti -1c
.RI "struct \fBMDESC\fP"
.br
.ti -1c
.RI "struct \fBIDESC\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBstatic2\fP   static"
.br
.ti -1c
.RI "#define \fBfortran_mr2d\fP   pctrmr2do"
.br
.ti -1c
.RI "#define \fBfortran_mr2dnew\fP   pctrmr2d"
.br
.ti -1c
.RI "#define \fBccopy_\fP   ccopy"
.br
.ti -1c
.RI "#define \fBclacpy_\fP   clacpy"
.br
.ti -1c
.RI "#define \fBClacpy\fP   Cctrlacpy"
.br
.ti -1c
.RI "#define \fBBLOCK_CYCLIC_2D\fP   1"
.br
.ti -1c
.RI "#define \fBSHIFT\fP(row,  sprow,  nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"
.br
.ti -1c
.RI "#define \fBmax\fP(A,  B)   ((A)>(B)?(A):(B))"
.br
.ti -1c
.RI "#define \fBmin\fP(A,  B)   ((A)>(B)?(B):(A))"
.br
.ti -1c
.RI "#define \fBDIVUP\fP(a,  b)   ( ((a)\-1) /(b)+1)"
.br
.ti -1c
.RI "#define \fBROUNDUP\fP(a,  b)   (\fBDIVUP\fP(a,b)*(b))"
.br
.ti -1c
.RI "#define \fBscanD0\fP   ctrscanD0"
.br
.ti -1c
.RI "#define \fBdispmat\fP   ctrdispmat"
.br
.ti -1c
.RI "#define \fBsetmemory\fP   ctrsetmemory"
.br
.ti -1c
.RI "#define \fBfreememory\fP   ctrfreememory"
.br
.ti -1c
.RI "#define \fBscan_intervals\fP   ctrscan_intervals"
.br
.ti -1c
.RI "#define \fBSENDBUFF\fP   0"
.br
.ti -1c
.RI "#define \fBRECVBUFF\fP   1"
.br
.ti -1c
.RI "#define \fBSIZEBUFF\fP   2"
.br
.ti -1c
.RI "#define \fBNDEBUG\fP"
.br
.ti -1c
.RI "#define \fBnbparameter\fP   24"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBClacpy\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pcoord\fP ()"
.br
.ti -1c
.RI "int \fBCblacs_pnum\fP ()"
.br
.ti -1c
.RI "void \fBCsetpvmtids\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_get\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_exit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridexit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_setup\fP ()"
.br
.ti -1c
.RI "void \fBCigebs2d\fP ()"
.br
.ti -1c
.RI "void \fBCigebr2d\fP ()"
.br
.ti -1c
.RI "void \fBCigesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCigerv2d\fP ()"
.br
.ti -1c
.RI "void \fBCigsum2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamn2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamx2d\fP ()"
.br
.ti -1c
.RI "void \fBCcgesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCcgerv2d\fP ()"
.br
.ti -1c
.RI "void \fBclacpy_\fP ()"
.br
.ti -1c
.RI "int \fBlocalindice\fP ()"
.br
.ti -1c
.RI "void * \fBmr2d_malloc\fP ()"
.br
.ti -1c
.RI "int \fBppcm\fP ()"
.br
.ti -1c
.RI "int \fBlocalsize\fP ()"
.br
.ti -1c
.RI "int \fBmemoryblocksize\fP ()"
.br
.ti -1c
.RI "int \fBchangeorigin\fP ()"
.br
.ti -1c
.RI "void \fBparamcheck\fP ()"
.br
.ti -1c
.RI "void \fBscanD0\fP ()"
.br
.ti -1c
.RI "void \fBdispmat\fP ()"
.br
.ti -1c
.RI "void \fBsetmemory\fP ()"
.br
.ti -1c
.RI "void \fBfreememory\fP ()"
.br
.ti -1c
.RI "int \fBscan_intervals\fP ()"
.br
.ti -1c
.RI "void \fBCpctrmr2do\fP ()"
.br
.ti -1c
.RI "void \fBCpctrmr2d\fP ()"
.br
.ti -1c
.RI "\fBstatic2\fP void \fBinitblock\fP (\fBcomplex\fP *block, int m, int n)"
.br
.ti -1c
.RI "void \fBinitforpvm\fP (int argc, argv)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, argv)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BLOCK_CYCLIC_2D   1"

.PP
Definition at line 92 of file pctrmrdrv\&.c\&.
.SS "#define ccopy_   ccopy"

.PP
Definition at line 73 of file pctrmrdrv\&.c\&.
.SS "#define Clacpy   Cctrlacpy"

.PP
Definition at line 76 of file pctrmrdrv\&.c\&.
.SS "#define clacpy_   clacpy"

.PP
Definition at line 74 of file pctrmrdrv\&.c\&.
.SS "#define dispmat   ctrdispmat"

.PP
Definition at line 139 of file pctrmrdrv\&.c\&.
.SS "#define DIVUP(a, b)   ( ((a)\-1) /(b)+1)"

.PP
Definition at line 100 of file pctrmrdrv\&.c\&.
.SS "#define fortran_mr2d   pctrmr2do"

.PP
Definition at line 71 of file pctrmrdrv\&.c\&.
.SS "#define fortran_mr2dnew   pctrmr2d"

.PP
Definition at line 72 of file pctrmrdrv\&.c\&.
.SS "#define freememory   ctrfreememory"

.PP
Definition at line 141 of file pctrmrdrv\&.c\&.
.SS "#define max(A, B)   ((A)>(B)?(A):(B))"

.PP
Definition at line 98 of file pctrmrdrv\&.c\&.
.SS "#define min(A, B)   ((A)>(B)?(B):(A))"

.PP
Definition at line 99 of file pctrmrdrv\&.c\&.
.SS "#define nbparameter   24"

.SS "#define NDEBUG"

.PP
Definition at line 158 of file pctrmrdrv\&.c\&.
.SS "#define RECVBUFF   1"

.PP
Definition at line 152 of file pctrmrdrv\&.c\&.
.SS "#define ROUNDUP(a, b)   (\fBDIVUP\fP(a,b)*(b))"

.PP
Definition at line 101 of file pctrmrdrv\&.c\&.
.SS "#define scan_intervals   ctrscan_intervals"

.PP
Definition at line 142 of file pctrmrdrv\&.c\&.
.SS "#define scanD0   ctrscanD0"

.PP
Definition at line 138 of file pctrmrdrv\&.c\&.
.SS "#define SENDBUFF   0"

.PP
Definition at line 151 of file pctrmrdrv\&.c\&.
.SS "#define setmemory   ctrsetmemory"

.PP
Definition at line 140 of file pctrmrdrv\&.c\&.
.SS "#define SHIFT(row, sprow, nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"

.PP
Definition at line 97 of file pctrmrdrv\&.c\&.
.SS "#define SIZEBUFF   2"

.PP
Definition at line 153 of file pctrmrdrv\&.c\&.
.SS "#define static2   static"

.PP
Definition at line 61 of file pctrmrdrv\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void Cblacs_exit ()"

.SS "void Cblacs_get ()"

.SS "void Cblacs_gridexit ()"

.SS "void Cblacs_gridinfo ()"

.SS "void Cblacs_gridinit ()"

.SS "void Cblacs_pcoord ()"

.SS "void Cblacs_pinfo ()"

.SS "int Cblacs_pnum ()"

.SS "void Cblacs_setup ()"

.SS "void Ccgerv2d ()"

.SS "void Ccgesd2d ()"

.SS "int changeorigin ()"

.SS "void Cigamn2d ()"

.SS "void Cigamx2d ()"

.SS "void Cigebr2d ()"

.SS "void Cigebs2d ()"

.SS "void Cigerv2d ()"

.SS "void Cigesd2d ()"

.SS "void Cigsum2d ()"

.SS "void Clacpy ()"

.SS "void clacpy_ ()"

.SS "void Cpctrmr2d ()"

.SS "void Cpctrmr2do ()"

.SS "void Csetpvmtids ()"

.SS "void dispmat ()"

.SS "void freememory ()"

.SS "\fBstatic2\fP void initblock (\fBcomplex\fP * block, int m, int n)"

.PP
Definition at line 168 of file pctrmrdrv\&.c\&.
.SS "void initforpvm (int argc, argv)"

.PP
Definition at line 228 of file pctrmrdrv\&.c\&.
.SS "int localindice ()"

.SS "int localsize ()"

.SS "int main (int argc, argv)"

.PP
Definition at line 247 of file pctrmrdrv\&.c\&.
.SS "int memoryblocksize ()"

.SS "void* mr2d_malloc ()"

.SS "void paramcheck ()"

.SS "int ppcm ()"

.SS "int scan_intervals ()"

.SS "void scanD0 ()"

.SS "void setmemory ()"

.SH "Author"
.PP 
Generated automatically by Doxygen for ScaLAPACK 2\&.1 from the source code\&.
