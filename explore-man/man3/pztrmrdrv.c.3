.TH "REDIST/TESTING/pztrmrdrv.c" 3 "Sat Nov 16 2019" "Version 2.1" "ScaLAPACK 2.1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
REDIST/TESTING/pztrmrdrv.c
.SH SYNOPSIS
.br
.PP
\fC#include 'redist\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <varargs\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBdcomplex\fP"
.br
.ti -1c
.RI "struct \fBMDESC\fP"
.br
.ti -1c
.RI "struct \fBIDESC\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBstatic2\fP   static"
.br
.ti -1c
.RI "#define \fBfortran_mr2d\fP   pztrmr2do"
.br
.ti -1c
.RI "#define \fBfortran_mr2dnew\fP   pztrmr2d"
.br
.ti -1c
.RI "#define \fBzcopy_\fP   zcopy"
.br
.ti -1c
.RI "#define \fBzlacpy_\fP   zlacpy"
.br
.ti -1c
.RI "#define \fBClacpy\fP   Cztrlacpy"
.br
.ti -1c
.RI "#define \fBBLOCK_CYCLIC_2D\fP   1"
.br
.ti -1c
.RI "#define \fBSHIFT\fP(row,  sprow,  nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"
.br
.ti -1c
.RI "#define \fBmax\fP(A,  B)   ((A)>(B)?(A):(B))"
.br
.ti -1c
.RI "#define \fBmin\fP(A,  B)   ((A)>(B)?(B):(A))"
.br
.ti -1c
.RI "#define \fBDIVUP\fP(a,  b)   ( ((a)\-1) /(b)+1)"
.br
.ti -1c
.RI "#define \fBROUNDUP\fP(a,  b)   (\fBDIVUP\fP(a,b)*(b))"
.br
.ti -1c
.RI "#define \fBscanD0\fP   ztrscanD0"
.br
.ti -1c
.RI "#define \fBdispmat\fP   ztrdispmat"
.br
.ti -1c
.RI "#define \fBsetmemory\fP   ztrsetmemory"
.br
.ti -1c
.RI "#define \fBfreememory\fP   ztrfreememory"
.br
.ti -1c
.RI "#define \fBscan_intervals\fP   ztrscan_intervals"
.br
.ti -1c
.RI "#define \fBSENDBUFF\fP   0"
.br
.ti -1c
.RI "#define \fBRECVBUFF\fP   1"
.br
.ti -1c
.RI "#define \fBSIZEBUFF\fP   2"
.br
.ti -1c
.RI "#define \fBNDEBUG\fP"
.br
.ti -1c
.RI "#define \fBnbparameter\fP   24"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBClacpy\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pcoord\fP ()"
.br
.ti -1c
.RI "int \fBCblacs_pnum\fP ()"
.br
.ti -1c
.RI "void \fBCsetpvmtids\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_get\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_exit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridexit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_setup\fP ()"
.br
.ti -1c
.RI "void \fBCigebs2d\fP ()"
.br
.ti -1c
.RI "void \fBCigebr2d\fP ()"
.br
.ti -1c
.RI "void \fBCigesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCigerv2d\fP ()"
.br
.ti -1c
.RI "void \fBCigsum2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamn2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamx2d\fP ()"
.br
.ti -1c
.RI "void \fBCzgesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCzgerv2d\fP ()"
.br
.ti -1c
.RI "void \fBzlacpy_\fP ()"
.br
.ti -1c
.RI "int \fBlocalindice\fP ()"
.br
.ti -1c
.RI "void * \fBmr2d_malloc\fP ()"
.br
.ti -1c
.RI "int \fBppcm\fP ()"
.br
.ti -1c
.RI "int \fBlocalsize\fP ()"
.br
.ti -1c
.RI "int \fBmemoryblocksize\fP ()"
.br
.ti -1c
.RI "int \fBchangeorigin\fP ()"
.br
.ti -1c
.RI "void \fBparamcheck\fP ()"
.br
.ti -1c
.RI "void \fBscanD0\fP ()"
.br
.ti -1c
.RI "void \fBdispmat\fP ()"
.br
.ti -1c
.RI "void \fBsetmemory\fP ()"
.br
.ti -1c
.RI "void \fBfreememory\fP ()"
.br
.ti -1c
.RI "int \fBscan_intervals\fP ()"
.br
.ti -1c
.RI "void \fBCpztrmr2do\fP ()"
.br
.ti -1c
.RI "void \fBCpztrmr2d\fP ()"
.br
.ti -1c
.RI "\fBstatic2\fP void \fBinitblock\fP (\fBdcomplex\fP *block, int m, int n)"
.br
.ti -1c
.RI "void \fBinitforpvm\fP (int argc, argv)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, argv)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BLOCK_CYCLIC_2D   1"

.PP
Definition at line 92 of file pztrmrdrv\&.c\&.
.SS "#define Clacpy   Cztrlacpy"

.PP
Definition at line 76 of file pztrmrdrv\&.c\&.
.SS "#define dispmat   ztrdispmat"

.PP
Definition at line 139 of file pztrmrdrv\&.c\&.
.SS "#define DIVUP(a, b)   ( ((a)\-1) /(b)+1)"

.PP
Definition at line 100 of file pztrmrdrv\&.c\&.
.SS "#define fortran_mr2d   pztrmr2do"

.PP
Definition at line 71 of file pztrmrdrv\&.c\&.
.SS "#define fortran_mr2dnew   pztrmr2d"

.PP
Definition at line 72 of file pztrmrdrv\&.c\&.
.SS "#define freememory   ztrfreememory"

.PP
Definition at line 141 of file pztrmrdrv\&.c\&.
.SS "#define max(A, B)   ((A)>(B)?(A):(B))"

.PP
Definition at line 98 of file pztrmrdrv\&.c\&.
.SS "#define min(A, B)   ((A)>(B)?(B):(A))"

.PP
Definition at line 99 of file pztrmrdrv\&.c\&.
.SS "#define nbparameter   24"

.SS "#define NDEBUG"

.PP
Definition at line 158 of file pztrmrdrv\&.c\&.
.SS "#define RECVBUFF   1"

.PP
Definition at line 152 of file pztrmrdrv\&.c\&.
.SS "#define ROUNDUP(a, b)   (\fBDIVUP\fP(a,b)*(b))"

.PP
Definition at line 101 of file pztrmrdrv\&.c\&.
.SS "#define scan_intervals   ztrscan_intervals"

.PP
Definition at line 142 of file pztrmrdrv\&.c\&.
.SS "#define scanD0   ztrscanD0"

.PP
Definition at line 138 of file pztrmrdrv\&.c\&.
.SS "#define SENDBUFF   0"

.PP
Definition at line 151 of file pztrmrdrv\&.c\&.
.SS "#define setmemory   ztrsetmemory"

.PP
Definition at line 140 of file pztrmrdrv\&.c\&.
.SS "#define SHIFT(row, sprow, nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"

.PP
Definition at line 97 of file pztrmrdrv\&.c\&.
.SS "#define SIZEBUFF   2"

.PP
Definition at line 153 of file pztrmrdrv\&.c\&.
.SS "#define static2   static"

.PP
Definition at line 61 of file pztrmrdrv\&.c\&.
.SS "#define zcopy_   zcopy"

.PP
Definition at line 73 of file pztrmrdrv\&.c\&.
.SS "#define zlacpy_   zlacpy"

.PP
Definition at line 74 of file pztrmrdrv\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void Cblacs_exit ()"

.SS "void Cblacs_get ()"

.SS "void Cblacs_gridexit ()"

.SS "void Cblacs_gridinfo ()"

.SS "void Cblacs_gridinit ()"

.SS "void Cblacs_pcoord ()"

.SS "void Cblacs_pinfo ()"

.SS "int Cblacs_pnum ()"

.SS "void Cblacs_setup ()"

.SS "int changeorigin ()"

.SS "void Cigamn2d ()"

.SS "void Cigamx2d ()"

.SS "void Cigebr2d ()"

.SS "void Cigebs2d ()"

.SS "void Cigerv2d ()"

.SS "void Cigesd2d ()"

.SS "void Cigsum2d ()"

.SS "void Clacpy ()"

.SS "void Cpztrmr2d ()"

.SS "void Cpztrmr2do ()"

.SS "void Csetpvmtids ()"

.SS "void Czgerv2d ()"

.SS "void Czgesd2d ()"

.SS "void dispmat ()"

.SS "void freememory ()"

.SS "\fBstatic2\fP void initblock (\fBdcomplex\fP * block, int m, int n)"

.PP
Definition at line 168 of file pztrmrdrv\&.c\&.
.SS "void initforpvm (int argc, argv)"

.PP
Definition at line 228 of file pztrmrdrv\&.c\&.
.SS "int localindice ()"

.SS "int localsize ()"

.SS "int main (int argc, argv)"

.PP
Definition at line 247 of file pztrmrdrv\&.c\&.
.SS "int memoryblocksize ()"

.SS "void* mr2d_malloc ()"

.SS "void paramcheck ()"

.SS "int ppcm ()"

.SS "int scan_intervals ()"

.SS "void scanD0 ()"

.SS "void setmemory ()"

.SS "void zlacpy_ ()"

.SH "Author"
.PP 
Generated automatically by Doxygen for ScaLAPACK 2\&.1 from the source code\&.
