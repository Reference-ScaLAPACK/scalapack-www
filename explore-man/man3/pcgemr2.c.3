.TH "REDIST/SRC/pcgemr2.c" 3 "Sat Nov 16 2019" "Version 2.1" "ScaLAPACK 2.1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
REDIST/SRC/pcgemr2.c
.SH SYNOPSIS
.br
.PP
\fC#include 'redist\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBcomplex\fP"
.br
.ti -1c
.RI "struct \fBMDESC\fP"
.br
.ti -1c
.RI "struct \fBIDESC\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBstatic2\fP   static"
.br
.ti -1c
.RI "#define \fBfortran_mr2d\fP   pcgemr2do"
.br
.ti -1c
.RI "#define \fBfortran_mr2dnew\fP   pcgemr2d"
.br
.ti -1c
.RI "#define \fBccopy_\fP   ccopy"
.br
.ti -1c
.RI "#define \fBclacpy_\fP   clacpy"
.br
.ti -1c
.RI "#define \fBClacpy\fP   Ccgelacpy"
.br
.ti -1c
.RI "#define \fBBLOCK_CYCLIC_2D\fP   1"
.br
.ti -1c
.RI "#define \fBSHIFT\fP(row,  sprow,  nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"
.br
.ti -1c
.RI "#define \fBmax\fP(A,  B)   ((A)>(B)?(A):(B))"
.br
.ti -1c
.RI "#define \fBmin\fP(A,  B)   ((A)>(B)?(B):(A))"
.br
.ti -1c
.RI "#define \fBDIVUP\fP(a,  b)   ( ((a)\-1) /(b)+1)"
.br
.ti -1c
.RI "#define \fBROUNDUP\fP(a,  b)   (\fBDIVUP\fP(a,b)*(b))"
.br
.ti -1c
.RI "#define \fBscanD0\fP   cgescanD0"
.br
.ti -1c
.RI "#define \fBdispmat\fP   cgedispmat"
.br
.ti -1c
.RI "#define \fBsetmemory\fP   cgesetmemory"
.br
.ti -1c
.RI "#define \fBfreememory\fP   cgefreememory"
.br
.ti -1c
.RI "#define \fBscan_intervals\fP   cgescan_intervals"
.br
.ti -1c
.RI "#define \fBSENDBUFF\fP   0"
.br
.ti -1c
.RI "#define \fBRECVBUFF\fP   1"
.br
.ti -1c
.RI "#define \fBSIZEBUFF\fP   2"
.br
.ti -1c
.RI "#define \fBNDEBUG\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBClacpy\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pcoord\fP ()"
.br
.ti -1c
.RI "int \fBCblacs_pnum\fP ()"
.br
.ti -1c
.RI "void \fBCsetpvmtids\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_get\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_pinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinfo\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridinit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_exit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_gridexit\fP ()"
.br
.ti -1c
.RI "void \fBCblacs_setup\fP ()"
.br
.ti -1c
.RI "void \fBCigebs2d\fP ()"
.br
.ti -1c
.RI "void \fBCigebr2d\fP ()"
.br
.ti -1c
.RI "void \fBCigesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCigerv2d\fP ()"
.br
.ti -1c
.RI "void \fBCigsum2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamn2d\fP ()"
.br
.ti -1c
.RI "void \fBCigamx2d\fP ()"
.br
.ti -1c
.RI "void \fBCcgesd2d\fP ()"
.br
.ti -1c
.RI "void \fBCcgerv2d\fP ()"
.br
.ti -1c
.RI "void \fBclacpy_\fP ()"
.br
.ti -1c
.RI "int \fBlocalindice\fP ()"
.br
.ti -1c
.RI "void * \fBmr2d_malloc\fP ()"
.br
.ti -1c
.RI "int \fBppcm\fP ()"
.br
.ti -1c
.RI "int \fBlocalsize\fP ()"
.br
.ti -1c
.RI "int \fBmemoryblocksize\fP ()"
.br
.ti -1c
.RI "int \fBchangeorigin\fP ()"
.br
.ti -1c
.RI "void \fBparamcheck\fP ()"
.br
.ti -1c
.RI "void \fBscanD0\fP ()"
.br
.ti -1c
.RI "void \fBdispmat\fP ()"
.br
.ti -1c
.RI "void \fBsetmemory\fP ()"
.br
.ti -1c
.RI "void \fBfreememory\fP ()"
.br
.ti -1c
.RI "int \fBscan_intervals\fP ()"
.br
.ti -1c
.RI "void \fBCpcgemr2do\fP ()"
.br
.ti -1c
.RI "void \fBCpcgemr2d\fP ()"
.br
.ti -1c
.RI "void \fBsetmemory\fP (\fBcomplex\fP **adpointer, int blocksize)"
.br
.ti -1c
.RI "void \fBfreememory\fP (\fBcomplex\fP *ptrtobefreed)"
.br
.ti -1c
.RI "int \fBscan_intervals\fP (char type, int ja, int jb, int n, \fBMDESC\fP *ma, \fBMDESC\fP *mb, int q0, int q1, int col0, int col1, \fBIDESC\fP *result)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BLOCK_CYCLIC_2D   1"

.PP
Definition at line 39 of file pcgemr2\&.c\&.
.SS "#define ccopy_   ccopy"

.PP
Definition at line 20 of file pcgemr2\&.c\&.
.SS "#define Clacpy   Ccgelacpy"

.PP
Definition at line 23 of file pcgemr2\&.c\&.
.SS "#define clacpy_   clacpy"

.PP
Definition at line 21 of file pcgemr2\&.c\&.
.SS "#define dispmat   cgedispmat"

.PP
Definition at line 86 of file pcgemr2\&.c\&.
.SS "#define DIVUP(a, b)   ( ((a)\-1) /(b)+1)"

.PP
Definition at line 47 of file pcgemr2\&.c\&.
.SS "#define fortran_mr2d   pcgemr2do"

.PP
Definition at line 18 of file pcgemr2\&.c\&.
.SS "#define fortran_mr2dnew   pcgemr2d"

.PP
Definition at line 19 of file pcgemr2\&.c\&.
.SS "#define freememory   cgefreememory"

.PP
Definition at line 88 of file pcgemr2\&.c\&.
.SS "#define max(A, B)   ((A)>(B)?(A):(B))"

.PP
Definition at line 45 of file pcgemr2\&.c\&.
.SS "#define min(A, B)   ((A)>(B)?(B):(A))"

.PP
Definition at line 46 of file pcgemr2\&.c\&.
.SS "#define NDEBUG"

.PP
Definition at line 105 of file pcgemr2\&.c\&.
.SS "#define RECVBUFF   1"

.PP
Definition at line 99 of file pcgemr2\&.c\&.
.SS "#define ROUNDUP(a, b)   (\fBDIVUP\fP(a,b)*(b))"

.PP
Definition at line 48 of file pcgemr2\&.c\&.
.SS "#define scan_intervals   cgescan_intervals"

.PP
Definition at line 89 of file pcgemr2\&.c\&.
.SS "#define scanD0   cgescanD0"

.PP
Definition at line 85 of file pcgemr2\&.c\&.
.SS "#define SENDBUFF   0"

.PP
Definition at line 98 of file pcgemr2\&.c\&.
.SS "#define setmemory   cgesetmemory"

.PP
Definition at line 87 of file pcgemr2\&.c\&.
.SS "#define SHIFT(row, sprow, nbrow)   ((row)\-(sprow)+ ((row) >= (sprow) ? 0 : (nbrow)))"

.PP
Definition at line 44 of file pcgemr2\&.c\&.
.SS "#define SIZEBUFF   2"

.PP
Definition at line 100 of file pcgemr2\&.c\&.
.SS "#define static2   static"

.PP
Definition at line 8 of file pcgemr2\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void Cblacs_exit ()"

.SS "void Cblacs_get ()"

.SS "void Cblacs_gridexit ()"

.SS "void Cblacs_gridinfo ()"

.SS "void Cblacs_gridinit ()"

.SS "void Cblacs_pcoord ()"

.SS "void Cblacs_pinfo ()"

.SS "int Cblacs_pnum ()"

.SS "void Cblacs_setup ()"

.SS "void Ccgerv2d ()"

.SS "void Ccgesd2d ()"

.SS "int changeorigin ()"

.SS "void Cigamn2d ()"

.SS "void Cigamx2d ()"

.SS "void Cigebr2d ()"

.SS "void Cigebs2d ()"

.SS "void Cigerv2d ()"

.SS "void Cigesd2d ()"

.SS "void Cigsum2d ()"

.SS "void Clacpy ()"

.SS "void clacpy_ ()"

.SS "void Cpcgemr2d ()"

.SS "void Cpcgemr2do ()"

.SS "void Csetpvmtids ()"

.SS "void dispmat ()"

.SS "void freememory ()"

.SS "void freememory (\fBcomplex\fP * ptrtobefreed)"

.PP
Definition at line 131 of file pcgemr2\&.c\&.
.SS "int localindice ()"

.SS "int localsize ()"

.SS "int memoryblocksize ()"

.SS "void* mr2d_malloc ()"

.SS "void paramcheck ()"

.SS "int ppcm ()"

.SS "int scan_intervals ()"

.SS "int scan_intervals (char type, int ja, int jb, int n, \fBMDESC\fP * ma, \fBMDESC\fP * mb, int q0, int q1, int col0, int col1, \fBIDESC\fP * result)"

.PP
Definition at line 144 of file pcgemr2\&.c\&.
.SS "void scanD0 ()"

.SS "void setmemory ()"

.SS "void setmemory (\fBcomplex\fP ** adpointer, int blocksize)"

.PP
Definition at line 116 of file pcgemr2\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ScaLAPACK 2\&.1 from the source code\&.
